$INCLUDE: 'CSD.FOR'
 
      SUBROUTINE BCONST (NCIN,IR,FIN)
C
C   THIS ROUTINE ACCESSES THE CURVE FIT COEFFICIENTS TO THE EQUATION
C   OF STATE PARAMETERS (STORED IN BLOCK DATA BDESC) FOR THE
C   REFRIGERANT PAIR OF INTEREST.  THE REFERENCE STATES FOR ENTHALPY
C   AND ENTROPY ARE ALSO COMPUTED.  THIS SUBROUTINE MUST BE CALLED
C   BEFORE ANY OTHER PROPERTY ROUTINES ARE REFERENCED AND ALSO IF
C   THE MIXTURE OR THE VALUES OF THE INTERACTION COEFFICIENTS, F(I,J),
C   ARE CHANGED.
C
C   INPUTS:
C      IR - ARRAY OF CODE NUMBERS FOR THE COMPONENTS OF THE MIXTURE
C      FIN - MIXTURE INTERACTION PARAMETER FOR BINARY PAIRS OF
C            PURE COMPONENTS
C
C   OUTPUTS (VIA COMMON BLOCKS):
C      A - ARRAY OF A COEFFICIENTS FOR THE PURE COMPONENTS
C      B - ARRAY OF B COEFFICIENTS FOR THE PURE COMPONENTS
C      C - ARRAY OF PURE COMPONENT CP0 COEFFICIENTS
C      HR - ARRAY OF PURE COMPONENT REFERENCE
C        ENTHALPIES; THESE ARE EQUAL TO THE SATURATED LIQUID
C        ENTHALPY AT THE REFERENCE TEMPERATURE MINUS THE PERFECT
C        GAS ENTHALPY AT THE REFERENCE TEMPERATURE
C      SR - REFERENCE ENTROPIES; EQUAL TO THE DIFFERENCE BETWEEN
C        THE SATURATED LIQUID AND PERFECT GAS ENTROPIES AT THE
C        REFERENCE TEMPERATURE
C      TC - PURE COMPONENT CRITICAL TEMPERATURES
C      TREF - REFERENCE TEMPERATURES AT WHICH HR AND SR ARE COMPUTED
C      WM - PURE COMPONENT MOLECULAR WEIGHTS
C
C   OTHER SUBROUTINES REFERENCED:
C      BUBLT - COMPUTE SATURATED LIQUID AND VAPOR CONDITIONS
C      HCVCPS - COMPUTE ENTHALPY AT REFERENCE STATE
C      ENTROP - COMPUTE REFERENCE ENTROPY
C
      IMPLICIT REAL (A-H,O-Z)
      DIMENSION IR(5),X(5),XV(5),FIN(5,5)
      CHARACTER*6 HREF(34),REFH(34)
      COMMON /NCOMP/ NC
      COMMON /ESDATA/ COEFF(9,34),CRIT(5,34)
      COMMON /ESPAR1/ AP(5),BP(5),F(5,5),DADT,DBDT,D2ADT,D2BDT
      COMMON /HREF1/ HREF,REFH
      COMMON /RDATA1/ A(0:2,5),B(0:2,5)
      COMMON /RDATA2/ WM(5),TC(5)
      COMMON /CPDATA/ C(0:2,5)
      COMMON /HSZERO/ HZERO(34),SZERO(34)
      COMMON /REF/ TREF(5),HR(5),SR(5),VR(5)
      NC=NCIN
      DO 100 KR=1,NC
      WM(KR)=CRIT(1,IR(KR))
      TREF(KR)=CRIT(2,IR(KR))
      TC(KR)=CRIT(3,IR(KR))
      HR(KR)=0.0
      SR(KR)=0.0
      VR(KR)=1.0
      DO 98 J=KR+1,NC
      F(KR,J)=FIN(KR,J)
   98 F(J,KR)=FIN(KR,J)
      F(KR,KR)=0.0
      DO 100 KC=0,2
      A(KC,KR)=COEFF(KC+1,IR(KR))
      B(KC,KR)=COEFF(KC+4,IR(KR))
  100 C(KC,KR)=COEFF(KC+7,IR(KR))
C
C   CALL BUBBLE POINT ROUTINE TO CALCULATE SATURATED LIQUID AND VAPOR
C   VOLUMES AND THEN CALL ENTHALPY AND ENTROPY ROUTINE TO DETERMINE
C   REFERENCE VALUES.  THE HZERO AND SZERO ALLOW AN ARBITRARY VALUE
C   TO BE ASSIGNED TO THE SATURATED LIQUID H OR S AT THE REFERENCE
C   TEMPERATURE.
C
      DO 164 KR=1,NC
      DO 160 I=1,NC
  160 X(I)=0.0
      X(KR)=1.0
      CALL BUBLT (TREF(KR),X,XV,P,VR(KR),VV,.TRUE.,.FALSE.)
      CALL HCVCPS (1,TREF(KR),VR(KR),X,HRKR,CV,CPX,VS)
      HR(KR)=HRKR-HZERO(IR(KR))
  164 SR(KR)=ENTROP(TREF(KR),VR(KR),X)-SZERO(IR(KR))
      RETURN
      END
C
C
C
      SUBROUTINE ESPAR (IQ,T,X,AMIX,BMIX)
C
C   THIS ROUTINE CALCULATES THE EQUATION OF STATE PARAMETERS AND THEIR
C   TEMPERATURE DEVIVATIVES AS A FUNCTION OF TEMPERATURE AND COMPOSITION
C   AS NEEDED BY THE OTHER PROPERTY ROUTINES.  BASED ON THE VALUE OF THE
C   INPUT QUALIFIER THE NECESSARY PARAMETERS ARE CALCULATED.
C   THE TEMPERATURE DEPENDENCE OF THE
C   A, B, AND CP0 PARAMETERS ARE CONTAINED ENTIRELY WITHIN ESPAR;
C   ALTERNATE EXPRESSIONS REQUIRE CHANGING ONLY THIS SUBROUTINE.
C   (CHANGES IN THE COMPOSITION DEPENDENCE OF A AND B WOULD ALSO
C   REQUIRE CHANGING THE FUNCTION SUBROUTINE FOR CHEMICAL POTENTIAL.)
C
C   INPUTS:
C      IQ - INPUT QUALIFIER
C         = 0 COMPUTE ONLY A AND B
C         >= 1 ALSO COMPUTE TEMPERATURE DERIVATIVES OF A AND B
C         >= 2 ALSO COMPUTE SECOND DERIVATIVE OF A AND B AND
C            IDEAL GAS HEAT CAPACITY
C         = 1, 2 OR 3 ALSO COMPUTE CONSTANTS FOR PURE COMPONENT ENTHALPY
C           AND ENTROPY
C      T - TEMPERATURE (K)
C      X - COMPOSITION (MOLE FRACTION COMPONENT A)
C
C   OUTPUTS:
C      AMIX - 'A' PARAMETER FOR MIXTURE AT T, X
C      BMIX - 'B' PARAMETER FOR MIXTURE AT T, X
C
C   OUTPUTS (VIA COMMON BLOCKS):
C      A(I) - 'A' PARAMETER FOR PURE COMPONENT I
C      B(I) - 'B' PARAMETER FOR PURE COMPONENT I
C      F(I,J) - MIXTURE INTERACTION PARAMETER FOR BINARY PAIR I,J
C      DADT - TEMPERATURE DERIVATIVE OF A
C      DBDT - TEMPERATURE DERIVATIVE OF B
C      D2ADT2 - SECOND DERIVATIVE OF A WITH RESPECT TO TEMPERATURE
C      D2BDT2 - SECOND DERIVATIVE OF B WITH RESPECT TO TEMPERATURE
C      HP(I) - INTEGRAL OF CP(I) WITH RESPECT TO TEMP FOR PURE I
C      SP(I) - INTEGRAL OF (CP(I) - R)/T WITH RESPECT TO TEMP FOR PURE I
C      CP(I) - PERFECT GAS HEAT CAPACITY FOR COMPONENT I (KJ/(KG MOL K))
C
C
      IMPLICIT REAL (A-H,O-Z)
      COMMON /NCOMP/ NC
      COMMON /ESPAR1/ AP(5),BP(5),F(5,5),DADT,DBDT,D2ADT,D2BDT
      COMMON /RDATA1/ A(0:2,5),B(0:2,5)
      COMMON /CPDATA/ C(0:2,5)
      COMMON /HSPURE/ HP(5),SP(5),CP(5)
      COMMON /REF/ TREF(5),HR(5),SR(5),VR(5)
      COMMON /RDATA4/ R
      DIMENSION X(5),AJI(5,5),DAJI(5,5),DA(5,5)
      AMIX=0.0
      BMIX=0.0
      DO 120 I=1,NC
      AP(I)=A(0,I)*EXP((A(1,I)+A(2,I)*T)*T)
      BP(I)=B(0,I)+(B(1,I)+B(2,I)*T)*T
      AJI(I,I)=X(I)*X(I)*AP(I)
      AMIX=AMIX+AJI(I,I)
      BMIX=BMIX+X(I)*BP(I)
      DO 120 J=1,I-1
      AJI(J,I)=X(J)*X(I)*(1.0-F(J,I))*SQRT(AP(J)*AP(I))
  120 AMIX=AMIX+2.0*AJI(J,I)
  124 CONTINUE
      IF (IQ.GE.1) THEN
        DADT=0.0
        DBDT=0.0
        DO 140 I=1,NC
        DA(I,I)=A(1,I)+2.0*A(2,I)*T
        DAJI(I,I)=AJI(I,I)*DA(I,I)
        DADT=DADT+DAJI(I,I)
        DBDT=DBDT+X(I)*(B(1,I)+2.0*B(2,I)*T)
        DO 140 J=1,I-1
        DA(J,I)=0.5*(A(1,J)+A(1,I))+(A(2,J)+A(2,I))*T
        DAJI(J,I)=AJI(J,I)*DA(J,I)
  140   DADT=DADT+2.0*DAJI(J,I)
        IF (IQ.GE.2) THEN
          D2ADT=0.0
          D2BDT=0.0
          DO 160 I=1,NC
          CP(I)=C(0,I)+(C(1,I)+C(2,I)*T)*T
          D2BDT=D2BDT+2.0*X(I)*B(2,I)
          D2ADT=D2ADT+DAJI(I,I)*DA(I,I)+2.0*AJI(I,I)*A(2,I)
          DO 160 J=1,I-1
  160     D2ADT=D2ADT+2.0*(DAJI(J,I)*DA(J,I)+AJI(J,I)*(A(2,J)+A(2,I)))
        END IF
        IF (IQ.LE.3) THEN
          DO 180 I=1,NC
          HP(I)=(C(0,I)+(0.5*C(1,I)+C(2,I)/3.0*T)*T)*T
  180     SP(I)=(C(0,I)-R)*LOG(T/TREF(I))+C(1,I)*(T-TREF(I))
     1    +0.5*C(2,I)*(T*T-TREF(I)**2)
        END IF
      END IF
      RETURN
      END
C
C
C
      SUBROUTINE BUBLT (T,XL,XV,P,VL,VV,LBUB,LCRIT)
C
C   GIVEN TEMPERATURE AND COMPOSITION OF ONE PHASE THIS ROUTINE
C   CALCULATES THE SATURATION PRESSURE, THE COMPOSITION OF THE OTHER
C   PHASE AND THE LIQUID AND VAPOR SPECIFIC VOLUMES.
C
C   INPUTS:
C      T - TEMPERATURE (K)
C      ONLY ONE OF:  XL - LIQUID COMPOSITION (MOLE FRACTION)
C               OR:  XV - VAPOR COMPOSITION (MOLE FRACTION)
C      LBUB - LOGICAL VARIABLE
C         IF LBUB=.TRUE. LIQUID COMPOSITION IS GIVEN (COMPUTE
C         BUBBLE POINT)
C         IF LBUB=.FALSE. VAPOR COMPOSITION IS GIVEN (COMPUTE
C         DEW POINT)
C
C   OUTPUTS:
C      XL OR XV - COMPOSITION OF CALCULATED PHASE
C      P - SATURATION PRESSURE (ATM)
C      VL - LIQUID VOLUME (M**3/KG MOL)
C      VV - VAPOR VOLUME (M**3/KG MOL)
C      LCRIT - ERROR FLAG; IF LCRIT=.TRUE. THE INPUT TEMPERATURE
C         EXCEEDS THE CRITICAL TEMPERATURE OF THE MIXTURE AND
C         NO CALCULATIONS ARE DONE
C
C   OTHER SUBROUTINES REFERENCED:
C      VIT - ITERATION FOR SPECIFIC VOLUME
C      PLIMIT - DETERMINES INITIAL BOUNDS ON PRESSURE AND VOLUME
C      ESPAR - COMPUTATION OF EQUATION OF STATE PARAMETERS
C
C   GENERAL NOMENCLATURE FOR FIRST LETTER OF VARIABLE NAMES
C      A,B - EQUATION OF STATE PARAMETERS
C      F - MIXING PARAMETER
C      T - TEMPERATURE
C      P - PRESSURE
C      V - SPECIFIC VOLUME
C      X - COMPOSITION
C      G - GIBBS FREE ENERGY
C      U - CHEMICAL POTENTIAL
C      Y - COMBINATION OF VARIABLES USED IN EQUATION OF STATE
C      TOL - CONVERGENCE TOLERANCE FOR ITERATION LOOPS
C      I,J - INDEX VARIABLES FOR ITERATION AND DO LOOPS
C      L - LOGICAL VARIABLES SUCH AS NON-CONVERGENCE FLAGS
C
C   GENERAL NOMENCLATURE FOR SECOND OR THIRD LETTER OF VARIABLES
C      L - LIQUID PHASE
C      V - VAPOR PHASE
C      1 - PARENT PHASE (PHASE WITH SPECIFIED COMPOSITION)
C      2 - INCIPIENT PHASE
C
C
      IMPLICIT REAL (A-H,O-Z)
      LOGICAL LBUB,LCRIT,LV1CON,LV2CON,LXCON,LXPOS,LXNEG,
     1  LPPOS,LPNEG,LPPCON
      COMMON /NCOMP/ NC
      COMMON /ESPAR1/ AP(5),BP(5),F(5,5),DADT,DBDT,D2ADT,D2BDT
      COMMON /RDATA4/ R
      COMMON /TOL/ TOLR,ITMAX,LUP
      DIMENSION PP(3),FP(2),XL(5),XV(5),X1(5),X2(5),X2C(5),
     1  XX2(5),Z(5),FX2(5),U1(5),U2(5),PL(3)
C
C   STATEMENT FUNCTION FOR GIBBS FREE ENERGY
C   NOTE THAT SINCE ONLY DIFFERENCES OF G ARE USED IN THE PROGRAM
C   ANY TERMS WHICH WOULD CANCEL ARE OMITTED
C
      G(T,V,A,B)=R*T*(-LOG(V)+0.25*B*((8.0*V-2.25*B)*V+0.1875*B*B)
     1  /(V-0.25*B)**2/(V-0.25*B))+A/B*LOG(V/(V+B))-A/(V+B)
C
      LCRIT=.FALSE.
C
C   COMPUTE PURE COMPONENT E.S. COEFFICIENTS, THE MIXING PARAMETER,
C   AND THE E.S. COEFFICIENTS FOR PHASE 1
C
      IF (LBUB) THEN
        DO 100 I=1,NC
        X1(I)=XL(I)
  100   XV(I)=XL(I)
      ELSE
        DO 120 I=1,NC
        X1(I)=XV(I)
  120   XL(I)=XV(I)
      END IF
      CALL ESPAR (0,T,X1,A1,B1)
C
C   DETERMINE IF INPUT TEMPERATURE EXCEEDS CRITICAL POINT;
C   IF SO, SET ERROR FLAG AND RETURN
C
      TC=A1/(B1*4.398909*R)
      IF (T.GT.0.99*TC) THEN
        LCRIT=.TRUE.
        WRITE (LUP,1010)
        RETURN
      END IF
C
C   ENTER ITERATION FOR PSEUDO-PURE COMPONENT.  THIS ITERATION
C   YIELDS THE FINAL RESULT FOR A PURE COMPONENT AND PROVIDES
C   A STARTING GUESS FOR THE PRESSURE OF A MIXTURE
C
C   CALL SUBROUTINE TO DETERMINE THE UPPER AND LOWER BOUNDS
C   ON PRESSURE FOR WHICH THERE ARE BOTH LIQUID AND VAPOR
C   SOLUTIONS OF THE EQUATION OF STATE
C
      CALL PLIMIT (T,A1,B1,VLOW,VUP,PLOW,PUP)
C
C   SET INITIAL GUESSES FOR PRESSURE NEAR THE UPPER AND
C   LOWER BOUNDS.  IF THE LOWER BOUND FOR PRESSURE IS NEGATIVE
C   RESET IT TO A SMALL POSITIVE VALUE.
C
      IF (PLOW.LE.0.0) THEN
        VLOW=0.8*B1
        PC=0.1049995*R*TC/B1
        PLOW=1.0E-12*PC
        PP(1)=PLOW
      ELSE
        PP(1)=PLOW+0.0001*(PUP-PLOW)
      END IF
      PP(2)=PUP-0.0001*(PUP-PLOW)
      PL(1)=LOG(PP(1))
      PL(2)=LOG(PP(2))
      VL=0.9*VLOW
      VV=1.1*VUP
      J=1
      LPPOS=.FALSE.
      LPNEG=.FALSE.
      LPPCON=.FALSE.
C
C   STARTING WITH INITIAL VALUES OF PRESSURE CLOSE TO THE UPPER
C   AND LOWER BOUNDS (FOUND BY SUBROUTINE PLIMIT) ITERATE ON
C   LOG (P) UNTIL THE GIBBS FREE ENERGY OF BOTH PHASES ARE EQUAL.
C   A COMBINATION OF SECANT AND REGULI-FALSI METHODS IS USED
C   FOR THE ITERATION.
C
      DO 400 IT=1,ITMAX
      LV1CON=.FALSE.
      LV2CON=.FALSE.
      CALL VIT (T,PP(J),A1,B1,VL,.TRUE.,LV1CON)
      CALL VIT (T,PP(J),A1,B1,VV,.FALSE.,LV2CON)
      GL=G(T,VL,A1,B1)
      GV=G(T,VV,A1,B1)
      FP(J)=GL-GV
      IF (FP(J).LT.0.0) THEN
        LPNEG=.TRUE.
        FPNEG=FP(J)
        PNEG=PL(J)
      ELSE
        LPPOS=.TRUE.
        FPPOS=FP(J)
        PPOS=PL(J)
      END IF
      IF (IT.LE.1) THEN
        J=2
      ELSE
        DGDPL=(FP(2)-FP(1))/(PL(2)-PL(1))
        IF (DGDPL.EQ.0.0) GOTO 440
        IF (ABS(FP(J)/(PL(J)*DGDPL)).LT.TOLR) GOTO 440
C   NEXT GUESS FOR LOG (P) GIVEN BY SECANT METHOD
        PL(3)=PL(2)-FP(2)/DGDPL
C   IF NEXT GUESS FOR LOG (P) IS FURTHER FROM SOLUTION THAN
C   PREVIOUS BEST GUESS, USE REGULI-FALSI METHOD FOR NEXT GUESS
        IF ((PL(3).GT.MAX(PNEG,PPOS) .OR.
     1    PL(3).LT.MIN(PNEG,PPOS)) .AND. LPNEG .AND. LPPOS)
     1    PL(3)=PPOS-FPPOS*(PPOS-PNEG)/(FPPOS-FPNEG)
        PL(1)=PL(2)
        PL(2)=PL(3)
        FP(1)=FP(2)
        PP(2)=EXP(PL(2))
      END IF
  400 CONTINUE
C   IF ITERATION HAS NOT CONVERGED, SET ERROR FLAG.
      LPPCON=.TRUE.
C
C   END OF PSEUDO-PURE COMPONENT ITERATION
C
C   FOR A PURE COMPONENT THE ABOVE ITERATION GIVES THE FINAL RESULT
C
  440 IF (NC.EQ.1) THEN
        IF (LV1CON) WRITE (LUP,1050)
        IF (LV2CON) WRITE (LUP,1055)
        IF (LPPCON) WRITE (LUP,1020)
        P=PP(J)
        RETURN
      END IF
C
C   ENTER ITERATION FOR MIXTURE
C
C   THE MIXTURE ITERATION CONSISTS OF TWO CONCENTRIC ITERATION
C   LOOPS WHICH VARY THE SATURATION PRESSURE OF THE MIXTURE AND THE
C   COMPOSITION OF THE COMPUTED PHASE TO GIVE EQUAL CHEMICAL
C   POTENTIALS FOR EACH OF THE COMPONENTS BETWEEN THE TWO PHASES.
C   THE INITIAL GUESS FOR THE PRESSURE IS GIVEN BY THE PSEUDO-PURE
C   ITERATION ABOVE; THE INITIAL GUESS FOR COMPOSITION IS THAT X2=X1.
C
C   ASSIGN INITIAL VALUES OF LIQUID AND VAPOR VOLUMES FROM ABOVE
C   ITERATION TO PHASE 1 AND 2 VOLUMES.
C
      IF (LBUB) THEN
        V1=VL
        V2=VV
      ELSE
        V1=VV
        V2=VL
      END IF
      PP(1)=PP(J)
C
C   BEGIN ITERATION FOR SATURATION PRESSURE OF MIXTURE
C
      J=1
      DO 500 I=1,NC
  500 X2C(I)=X1(I)
      LPNEG=.FALSE.
      LPPOS=.FALSE.
      DO 800 ITP=1,ITMAX
      DO 520 I=1,NC
  520 XX2(I)=X2C(I)
      LXCON=.FALSE.
      LV1CON=.FALSE.
      CALL VIT (T,PP(J),A1,B1,V1,LBUB,LV1CON)
C
C   IF VOLUME ITERATION HAS NOT CONVERGED, TRY A NEW PRESSURE AND
C   RETURN TO THE BEGINNING OF THE ITERATION
C
      IF (LV1CON .OR. LXCON) THEN
        PP(2)=0.5*(PP(1)+PP(2))
        GOTO 800
      END IF
C   COMPUTE CHEMICAL POTENTIALS FOR PHASE 1
      DO 540 I=1,NC
  540 U1(I)=U(T,X1,I,V1,A1,B1,AP,BP,F)
C
C   ENTER INNER ITERATION LOOP (FOR COMPOSITION OF PHASE 2)
C
      LXNEG=.FALSE.
      LXPOS=.FALSE.
      DO 600 IT=1,ITMAX
      LV2CON=.FALSE.
C   COMPUTE EQUATION OF STATE COEFFICIENTS FOR PHASE 2
      CALL ESPAR (0,T,XX2,A2,B2)
      CALL VIT (T,PP(J),A2,B2,V2,.NOT.LBUB,LV2CON)
C
C   IF VOLUME ITERATION HAS NOT CONVERGED, TRY A NEW PRESSURE
C   AND RETURN TO THE START OF THE PRESSURE ITERATION.
C
      IF (LV2CON) THEN
        PP(2)=0.5*(PP(1)+PP(2))
        GOTO 800
      END IF
C  COMPUTE CHEMICAL POTENTIALS OF PHASE 2
      DO 560 I=1,NC
  560 U2(I)=U(T,XX2,I,V2,A2,B2,AP,BP,F)
C
C   CALCULATE THE COMPOSITION OF PHASE 2 FROM THE COMPOSITION
C   OF PHASE 1 AND THE CHEMICAL POTENTIALS.  THE INNER ITERATION
C   LOOP HAS CONVERGED WHEN THE CALCULATED COMPOSITION EQUALS
C   (WITHIN A CONVERGENCE TOLERANCE) THE GUESSED VALUE OF X2.
C
      FXSUM=0.0
      C=0.0
      DO 580 I=1,NC
      Z(I)=X1(I)*EXP(U1(I)-U2(I))
  580 C=C+Z(I)
      DO 584 I=1,NC
      X2C(I)=Z(I)/C
      FX2(I)=X2C(I)-XX2(I)
      XX2(I)=X2C(I)
  584 FXSUM=FXSUM+ABS(FX2(I))
      IF (FXSUM.LT.NC*TOLR) THEN
        GOTO 640
      END IF
  600 CONTINUE
C   IF INNER ITERATION LOOP HAS NOT CONVERGED, SET ERROR FLAG
      LXCON=.TRUE.
C
C   END OF ITERATION LOOP FOR PHASE 2 COMPOSITION
C
  640 FP(J)=1.0-C
C     WRITE (*,*) IT,FXSUM,(X2C(I),I=1,NC)
C     WRITE (*,*) ITP,J,PP(J),C
C
C   OUTER (PRESSURE) ITERATION HAS CONVERGED WHEN C = 1.000
C   (I.E. WHEN THE CHEMICAL POTENTIALS OF EACH COMPONENT ARE
C   THE SAME IN BOTH PHASES).
C
      IF (ABS(FP(1)).LT.100.*TOLR) GOTO 840
C
C   PROVIDED THAT THE X2 ITERATION HAS CONVERGED FOR THE CURRENT
C   GUESS OF PRESSURE, UPDATE THE POSITIVE AND NEGATIVE
C   BOUNDS FOR USE WITH THE REGULI-FALSI METHOD.
C
      IF (.NOT.LXCON) THEN
        IF (FP(J).LT.0.0) THEN
          LPNEG=.TRUE.
          FPNEG=FP(J)
          PNEG=PP(J)
        ELSE
          LPPOS=.TRUE.
          FPPOS=FP(J)
          PPOS=PP(J)
        END IF
      END IF
C
C   COMPUTE NEW GUESS FOR SATURATION PRESSURE.
C
      IF (ITP.LE.2 .OR. J.EQ.1 .OR. FP(1).EQ.FP(2)) THEN
        PP(1)=PP(J)
        FP(1)=FP(J)
        IF (LBUB) THEN
          PP(2)=PP(J)*C
        ELSE
          PP(2)=PP(J)/C
        END IF
        J=2
      ELSE
        PP(3)=PP(2)-FP(2)*(PP(2)-PP(1))/(FP(2)-FP(1))
        IF ((PP(3).GT.MAX(PNEG,PPOS) .OR.
     1    PP(3).LT.MIN(PNEG,PPOS)) .AND. LPNEG .AND. LPPOS)
     1    PP(3)=PPOS-FPPOS*(PPOS-PNEG)/(FPPOS-FPNEG)
        PP(1)=PP(2)
        PP(2)=PP(3)
        FP(1)=FP(2)
      END IF
  800 CONTINUE
      WRITE (LUP,1040)
  840 P=PP(J)
C
C   ASSIGN RESULTS FOR PHASES 1 AND 2 TO LIQUID AND VAPOR PHASES
C   DEPENDING ON WHETHER THE DEW OR BUBBLE POINT WAS CALCULATED.
C
      IF (LBUB) THEN
        DO 860 I=1,NC
  860   XV(I)=XX2(I)
        VL=V1
        VV=V2
      ELSE
        DO 880 I=1,NC
  880   XL(I)=XX2(I)
        VL=V2
        VV=V1
      END IF
C
C   PRINT WARNING MESSAGES FOR ANY CASES OF NON-CONVERGENCE OCCURING
C   ON FINAL CALL TO EACH ITERATION AND RETURN.
C
      IF (LV1CON) WRITE (LUP,1050)
      IF (LV2CON) WRITE (LUP,1055)
      IF (LXCON) WRITE (LUP,1060)
      RETURN
 1010 FORMAT (1X,'CRITICAL POINT OF PURE OR PSEUDO-PURE MATERIAL',
     1  ' EXCEEDED IN BUBLT')
 1020 FORMAT (1X,'PURE MATERIAL PRESSURE ITERATION IN BUBLT',
     1  ' DID NOT CONVERGE')
 1040 FORMAT (1X,'MIXTURE PRESSURE ITERATION IN BUBLT DID NOT',
     1  ' CONVERGE')
 1050 FORMAT (1X,'VOLUME ITERATION FOR PARENT PHASE DID',
     1  ' NOT CONVERGE')
 1055 FORMAT (1X,'VOLUME ITERATION FOR INCIPIENT PHASE DID',
     1  ' NOT CONVERGE')
 1060 FORMAT (1X,'COMPOSITION ITERATION IN BUBLT DID NOT CONVERGE')
      END
C
C   FUNCTION SUBROUTINE FOR THE EVALUATION OF CHEMICAL POTENTIAL
C   (THE QUANTITY EVALUATED IS U/RT; ALSO SINCE ONLY DIFFERENCES
C   IN U ARE REQUIRED IN THE PROGRAM, ANY TERMS WHICH WOULD
C   CANCEL ARE OMITTED)
C
      FUNCTION U (T,X,K,V,A,B,AP,BP,F)
      IMPLICIT REAL (A-H,O-Z)
      COMMON /RDATA4/ R
      COMMON /NCOMP/ NC
      DIMENSION AP(5),BP(5),F(5,5),X(5)
      DA=-2.0*A
      DB=BP(K)-B
      SQAK=SQRT(AP(K))
      DO 120 I=1,NC
      DA=DA+2.0*X(I)*SQRT(AP(I))*SQAK
      IF (I.NE.K) DA=DA-2.0*X(I)*F(K,I)*SQAK*SQRT(AP(I))
  120 CONTINUE
      B4V=4.0*V-B
      U=-LOG(V)-(LOG((V+B)/V)*(A*(1.0-DB/B)+DA)+A*(DB+B)/(V+B))/(B*R*T)
     1  +(8.0*V*BP(K)*(8.0*V-B)/B4V+B*(16.0*V-3.0*B))/(B4V*B4V)
      RETURN
      END
C
C
      SUBROUTINE PLIMIT (T,A,B,VL,VU,PLOW,PUP)
C
C   GIVEN TEMPERATURE AND EQUATION OF STATE PARAMETERS, THIS
C   ROUTINE CALCULATES THE UPPER AND LOWER BOUNDS ON PRESSURE
C   FOR WHICH THERE ARE BOTH LIQUID AND VAPOR SOLUTIONS TO THE
C   EQUATION OF STATE.  IT CARRIES OUT TWO BISECTION METHOD
C   ITERATIONS TO FIND THE POINTS WHERE THE DERIVATIVE OF PRESSURE
C   W.R.T. VOLUME IS ZERO.
C
C   INPUTS:
C      T - TEMPERATURE (K)
C      A,B - EQUATION OF STATE PARAMETERS AT TEMPERATURE T
C
C   OUTPUTS:
C      PLOW - LOWER BOUND ON PRESSURE (PLOW CAN BE NEGATIVE, THE
C          CALLING PROGRAM MUST CHECK AND CORRECT FOR NEGATIVE
C          PRESSURES)
C      PUP - UPPER BOUND ON PRESSURE (KPA)
C      VL - MOLAR VOLUME AT PLOW (M**3/KMOL)
C      VU - MOLAR VOLUME AT PUP (M**3/KMOL)
C
C   OTHER SUBROUTINES REFERENCED:
C      NONE
C
C
      IMPLICIT REAL (A-H,O-Z)
      COMMON /RDATA4/ R
      COMMON /TOL/ TOLR,ITMAX,LUP
C
C   STATEMENT FUNCTIONS FOR THE EVALUATION OF PRESSURE AS A
C   FUNCTION OF V AND THE DERIVATIVE OF PRESSURE W.R.T
C   VOLUME AS A FUNCTION OF V
C
      P(RT,V,Y,A,B)=(RT*(1.0+(1.0+(1.0-Y)*Y)*Y)/(1.0-Y)**3
     1  -A/(V+B))/V
      DP(RT,V,A,B,B4,B42)=(-RT*(B42*B42+(-4.0*B42*B4+(4.0*B42
     1  +(4.0*B4+V)*V)*V)*V)/(V-B4)**4+A*(2.0*V+B)/(V+B)**2)/V**2
C
      B4=0.25*B
      B42=B4*B4
      RT=R*T
C
C   STARTING AT A VOLUME OF 12.0*B4 (WHICH HAS A POSITIVE SLOPE
C   FOR ALL 'REASONABLE' VALUES OF A, B, T) REDUCE THE VOLUME
C   UNTIL A NEGATIVE SLOPE OF P W.R.T. V IS FOUND AND THEN BEGIN
C   BISECTION METHOD TO FIND LOWER BOUND ON VOLUME AND PRESSURE.
C
      VC=12.0272727*B4
      V=VC
      DO 100 IT=1,ITMAX
      DPDV=DP(RT,V,A,B,B4,B42)
      IF (DPDV.LE.0.0) GOTO 116
      VPOS=V
      V=0.5*(V+B4)
  100 CONTINUE
  116 VNEG=V
      DO 120 IT=1,20
      VL=0.5*(VNEG+VPOS)
      DPDV=DP(RT,VL,A,B,B4,B42)
      IF (DPDV.LT.0.0) THEN
        VNEG=VL
      ELSE
        VPOS=VL
      END IF
  120 CONTINUE
      Y=B4/VL
      PLOW=P(RT,VL,Y,A,B)
C
C   STARTING AT V = 2*A/RT INCREASE V UNTIL A NEGATIVE
C   SLOPE IS FOUND; USE WITH V = 12.0*B TO BEGIN BISECTION
C   ITERATION FOR UPPER BOUND ON PRESSURE
C
      VPOS=VC
      V=2.0*A/RT
      DO 160 IT=1,ITMAX
      DPDV=DP(RT,V,A,B,B4,B42)
      IF (DPDV.LE.0.0) GOTO 164
      VPOS=V
      V=2.0*V
  160 CONTINUE
  164 VNEG=V
      DO 180 IT=1,20
      VU=0.5*(VNEG+VPOS)
      DPDV=DP(RT,VU,A,B,B4,B42)
      IF (DPDV.LT.0.0) THEN
        VNEG=VU
      ELSE
        VPOS=VU
      END IF
  180 CONTINUE
      Y=B4/VU
      PUP=P(RT,VU,Y,A,B)
      RETURN
      END
C
C
C
      SUBROUTINE BUBLP (P,XL,XV,T,VL,VV,LBUB,LCRIT)
C
C   DEVELOPED BY MARK MCLINDEN AND GRAHAM MORRISON AT THE
C   NATIONAL BUREAU OF STANDARDS UNDER FUNDING FROM THE ELECTRIC
C   POWER RESEARCH INSTITUTE AND NBS.
C
C   GIVEN PRESSURE AND COMPOSITION OF ONE PHASE THIS ROUTINE
C   CALCULATES THE SATURATION TEMPERATURE, THE COMPOSITION OF THE OTHER
C   PHASE AND THE LIQUID AND VAPOR MOLAR VOLUMES.
C
C   INPUTS:
C      P - SATURATION PRESSURE (KPA)
C      ONLY ONE OF:  XL - LIQUID COMPOSITION (MOLE FRACTION)
C               OR:  XV - VAPOR COMPOSITION (MOLE FRACTION)
C      LBUB - LOGICAL VARIABLE
C         IF LBUB=.TRUE. LIQUID COMPOSITION IS GIVEN (COMPUTE
C         BUBBLE POINT)
C         IF LBUB=.FALSE. VAPOR COMPOSITION IS GIVEN (COMPUTE
C         DEW POINT)
C
C   OUTPUTS:
C      XL OR XV - COMPOSITION OF CALCULATED PHASE
C      T - SATURATION TEMPERATURE (K)
C      VL - LIQUID VOLUME (M**3/KMOL)
C      VV - VAPOR VOLUME (M**3/KMOL)
C      LCRIT - ERROR FLAG; SET TO .TRUE. WHEN THE INPUT PRESSURE
C         EXCEEDS THE CRITICAL PRESSURE.
C
C   OTHER SUBROUTINES REFERENCED:
C      VIT - ITERATION FOR MOLAR VOLUME
C      ESPAR - COMPUTATION OF EQUATION OF STATE PARAMETERS
C
C   GENERAL NOMENCLATURE FOR FIRST LETTER OF VARIABLE NAMES
C      A,B - EQUATION OF STATE PARAMETERS
C      F - MIXING PARAMETER
C      T - TEMPERATURE
C      P - PRESSURE
C      V - MOLAR VOLUME
C      X - COMPOSITION
C      G - GIBBS FREE ENERGY
C      U - CHEMICAL POTENTIAL
C      Y - COMBINATION OF VARIABLES USED IN EQUATION OF STATE
C      TOL - CONVERGENCE TOLERANCE FOR ITERATION LOOPS
C      I,J - INDEX VARIABLES FOR ITERATION AND DO LOOPS
C      L - LOGICAL VARIABLES SUCH AS NON-CONVERGENCE FLAGS
C
C   GENERAL NOMENCLATURE FOR SECOND OR THIRD LETTER OF VARIABLES
C      A,B - COMPONENTS OF MIXTURE; COMPOSITION IS MOLE FRACTION A
C      L - LIQUID PHASE
C      V - VAPOR PHASE
C      1 - PARENT PHASE (PHASE WITH SPECIFIED COMPOSITION)
C      2 - INCIPIENT PHASE
C      (FOR EXAMPLE UA1 REFERS TO CHEMICAL POTENTIAL OF COMPONENT A
C      IN PHASE 1)
C
C
      IMPLICIT REAL (A-H,O-Z)
      LOGICAL LBUB,LV1CON,LV2CON,LXCON,LXPOS,LXNEG,
     1  LTPOS,LTNEG,LPPCON,LCRIT
      COMMON /ESPAR1/ AP(5),BP(5),F(5,5),DADT,DBDT,D2ADT,D2BDT
      COMMON /NCOMP/ NC
      COMMON /RDATA4/ R
      COMMON /TOL/ TOLR,ITMAX,LUP
      DIMENSION TT(3),FT(2)
      DIMENSION XL(5),XV(5),X1(5),X2(5),X2C(5),XX2(5),Z(5),
     1  FX2(5),U1(5),U2(5),UL(5),PL(5)
      SAVE TNEG,TPOS
      DATA TC /340./
      DATA TNEG,TPOS /9999.,-999./
C
C   STATEMENT FUNCTIONS FOR GIBBS FREE ENERGY AND CHEMICAL POTENTIAL
C   NOTE THAT SINCE ONLY DIFFERENCES OF G AND U ARE USED IN THE PROGRAM
C   ANY TERMS WHICH WOULD CANCEL ARE OMITTED.  BOTH G AND U ARE
C   DIVIDED BY R*T TO OBTAIN DIMENSIONLESS QUANTITIES.
C
      G(T,V,A,B)=-LOG(V)+0.25*B*((8.0*V-2.25*B)*V+0.1875*B*B)
     1  /(V-0.25*B)**2/(V-0.25*B)+(A/B*LOG(V/(V+B))-A/(V+B))/(R*T)
C
C   COMPUTE PURE COMPONENT E.S. COEFFICIENTS, THE MIXING PARAMETER,
C   AND THE E.O.S. COEFFICIENTS FOR PHASE 1
C
      IF (LBUB) THEN
        DO 100 I=1,NC
        X1(I)=XL(I)
  100   XV(I)=XL(I)
      ELSE
        DO 120 I=1,NC
        X1(I)=XV(I)
  120   XL(I)=XV(I)
      END IF
C
C   FIND CRITICAL POINT OF THE PURE (OR PSEUDO-PURE) MATERIAL
C   AND BASE INITIAL GUESS FOR TEMPERATURE ON A SIMPLE, EMPIRICAL
C   RELATIONSHIP BETWEEN REDUCED PRESSURE AND REDUCED TEMPERATURE
C   THAT IS REASONABLY ACCURATE FOR REFRIGERANTS.
C
      LCRIT=.FALSE.
      CALL CRITX (X1,TC,PC,VC)
      TT(1)=TC/(1.0-0.153*LOG(P/PC))
      CALL ESPAR (0,TT(1),X1,A1,B1)
      VL=0.8*B1
      VV=R*TT(1)/P
C
C   ENTER ITERATION FOR PURE COMPONENT.  THIS ITERATION VARIES
C   TEMPERATURE UNTIL THE GIBBS FREE ENERGY OF BOTH PHASES ARE EQUAL.
C   A COMBINATION OF SECANT AND REGULI-FALSI METHODS IS USED
C   FOR THE ITERATION.
C
      IF (NC.EQ.1) THEN
        IF (P.GT.PC) THEN
          LCRIT=.TRUE.
          WRITE (LUP,1010)
          RETURN
        END IF
        J=1
        LTPOS=.FALSE.
        LTNEG=.FALSE.
        LPPCON=.FALSE.
        DO 400 IT=1,ITMAX
        CALL ESPAR (0,TT(J),X1,A1,B1)
        LV1CON=.FALSE.
        LV2CON=.FALSE.
        CALL VIT (TT(J),P,A1,B1,VL,.TRUE.,LV1CON)
        CALL VIT (TT(J),P,A1,B1,VV,.FALSE.,LV2CON)
        GL=G(TT(J),VL,A1,B1)
        GV=G(TT(J),VV,A1,B1)
        FT(J)=GL-GV
C     WRITE (*,*) IT,TT(J),GL,GV,FT(J)
        IF (ABS(FT(J)).LT.100.*TOLR) GOTO 440
        IF (FT(J).LT.0.0) THEN
          LTNEG=.TRUE.
          FTNEG=FT(J)
          TNEG=TT(J)
        ELSE
          LTPOS=.TRUE.
          FTPOS=FT(J)
          TPOS=TT(J)
        END IF
        IF (IT.LE.1) THEN
C         C=EXP(GL-GV)
C         P2=P*C
C         TT(2)=1.0/(1.0/TT(1)+0.0004*(LOG(P2)-LOG(P)))
          TT(2)=0.95*TT(1)
          J=2
        ELSE
          DGDT=(FT(2)-FT(1))/(TT(2)-TT(1))
          IF (DGDT.EQ.0.0) GOTO 440
C   NEXT GUESS FOR TEMPERATURE GIVEN BY SECANT METHOD
          TT(3)=TT(2)-FT(2)/DGDT
C   IF NEXT GUESS FOR TEMPERATURE IS FURTHER FROM SOLUTION THAN
C   PREVIOUS BEST GUESS, USE REGULI-FALSI METHOD FOR NEXT GUESS
          IF (LTNEG.AND.LTPOS) THEN
            IF (TT(3).LT.MIN(TNEG,TPOS) .OR. TT(3).GT.MAX(TNEG,TPOS))
     1        TT(3)=TPOS-FTPOS*(TPOS-TNEG)/(FTPOS-FTNEG)
          END IF
          TT(1)=TT(2)
          FT(1)=FT(2)
          TT(2)=TT(3)
        END IF
  400   CONTINUE
C   IF ITERATION HAS NOT CONVERGED, SET ERROR FLAG.
        LPPCON=.TRUE.
C
C   END OF PURE COMPONENT ITERATION
C
  440   IF (LV1CON) WRITE (LUP,1050)
        IF (LV2CON) WRITE (LUP,1055)
        IF (LPPCON) WRITE (LUP,1020)
        T=TT(J)
        RETURN
      END IF
C
C   ENTER ITERATION FOR MIXTURE
C
C   THE MIXTURE ITERATION CONSISTS OF TWO CONCENTRIC ITERATION
C   LOOPS WHICH VARY THE TEMPERATURE OF THE MIXTURE AND THE
C   COMPOSITION OF THE COMPUTED PHASE TO GIVE EQUAL CHEMICAL
C   POTENTIALS FOR EACH OF THE COMPONENTS BETWEEN THE TWO PHASES.
C   THE INITIAL GUESS FOR THE TEMPERATURE IS GIVEN BY THE CALCULATION
C   ABOVE; THE INITIAL GUESS FOR COMPOSITION IS THAT X2=X1.
C
      J=1
      DO 500 I=1,NC
  500 X2C(I)=X1(I)
      IF (LBUB) THEN
        V1=VL
        V2=VV
      ELSE
        V1=VV
        V2=VL
      END IF
      LTNEG=.FALSE.
      LTPOS=.FALSE.
      DO 800 ITT=1,ITMAX
      DO 520 I=1,NC
  520 XX2(I)=X2C(I)
      LXCON=.FALSE.
      LV1CON=.FALSE.
      CALL ESPAR (0,TT(J),X1,A1,B1)
      CALL VIT (TT(J),P,A1,B1,V1,LBUB,LV1CON)
C
C   IF VOLUME ITERATION HAS NOT CONVERGED, TRY A NEW TEMPERATURE AND
C   RETURN TO THE BEGINNING OF THE ITERATION
C
      IF (LV1CON .OR. LXCON) THEN
        TT(J)=0.95*TT(J)
        GOTO 800
      END IF
C   COMPUTE CHEMICAL POTENTIALS FOR PHASE 1
      DO 540 I=1,NC
  540 U1(I)=U(TT(J),X1,I,V1,A1,B1,AP,BP,F)
C
C   ENTER INNER ITERATION LOOP (FOR COMPOSITION OF PHASE 2)
C
      JJ=1
      LXNEG=.FALSE.
      LXPOS=.FALSE.
      DO 600 IT=1,ITMAX
      LV2CON=.FALSE.
C   COMPUTE EQUATION OF STATE COEFFICIENTS FOR PHASE 2
      CALL ESPAR (0,TT(J),XX2(JJ),A2,B2)
      CALL VIT (TT(J),P,A2,B2,V2,.NOT.LBUB,LV2CON)
C
C   IF VOLUME ITERATION HAS NOT CONVERGED, TRY A NEW TEMPERATURE
C   AND RETURN TO THE START OF THE TEMPERATURE ITERATION.
C
      IF (LV2CON) THEN
        TT(J)=0.95*TT(J)
        GOTO 800
      END IF
C  COMPUTE CHEMICAL POTENTIALS OF PHASE 2
      DO 560 I=1,NC
  560 U2(I)=U(TT(J),XX2,I,V2,A2,B2,AP,BP,F)
C
C   CALCULATE THE COMPOSITION OF PHASE 2 FROM THE COMPOSITION
C   OF PHASE 1 AND THE CHEMICAL POTENTIALS.  THE INNER ITERATION
C   LOOP HAS CONVERGED WHEN THE CALCULATED COMPOSITION EQUALS
C   (WITHIN A CONVERGENCE TOLERANCE) THE GUESSED VALUE OF X2.
C
      FXSUM=0.0
      C=0.0
      DO 580 I=1,NC
      Z(I)=X1(I)*EXP(U1(I)-U2(I))
 
  580 C=C+Z(I)
      DO 584 I=1,NC
      X2C(I)=Z(I)/C
      FX2(I)=X2C(I)-XX2(I)
      XX2(I)=X2C(I)
  584 FXSUM=FXSUM+ABS(FX2(I))
      IF(IT.LE.1) FXOLD=1.0E6
      IF (FXSUM.LT.NC*TOLR) THEN
        GOTO 640
      END IF
      FXDIF=ABS(FXSUM-FXOLD)
      IF(FXDIF.LE.10.*TOLR.AND.IT.GE.ITMAX) GO TO 640
      FXOLD=FXSUM
  600 CONTINUE
C   IF INNER ITERATION LOOP HAS NOT CONVERGED, SET ERROR FLAG
      WRITE(9,*)IT,FXSUM,NC*TOLR,FXSUM/(NC*TOLR),FXDIF
      LXCON=.TRUE.
C
C   END OF ITERATION LOOP FOR PHASE 2 COMPOSITION
  640 FT(J)=1.0-C
C
C     WRITE (*,*) ITT,J,TT(J),FT(J)
C   OUTER (TEMPERATURE) ITERATION HAS CONVERGED WHEN C = 1.000
C   (I.E. WHEN THE CHEMICAL POTENTIALS OF EACH COMPONENT ARE
C   THE SAME IN BOTH PHASES).
C
      IF (ABS(FT(J)).LT.100.*TOLR) GOTO 840
C
C   PROVIDED THAT THE X2 ITERATION HAS CONVERGED FOR THE CURRENT
C   GUESS OF TEMPERATURE, UPDATE THE POSITIVE AND NEGATIVE
C   BOUNDS FOR USE WITH THE REGULI-FALSI METHOD.
C
      IF (.NOT.LXCON) THEN
        IF (FT(J).LT.0.0) THEN
          LTNEG=.TRUE.
          FTNEG=FT(J)
          TNEG=TT(J)
        ELSE
          LTPOS=.TRUE.
          FTPOS=FT(J)
          TPOS=TT(J)
        END IF
      END IF
C
C   COMPUTE NEW GUESS FOR SATURATION TEMPERATURE.
C   FOR THE SECOND ITERATION, COMPUTE AN APPROXIMATE SATURATION
C   PRESSURE CORRESPONDING TO THE CURRENT GUESS OF TEMPERATURE
C   AND ADJUST THE GUESS FOR TEMPERATURE ACCORDING TO THE
C   DEVIATION BETWEEN THE CALCULATED AND INPUT PRESSURES
C
      IF (ITT.LE.2) THEN
        IF (LBUB) THEN
          P2=P*C
        ELSE
          P2=P/C
        END IF
        TT(3)=1.0/(1.0/TT(J)+0.0004*(LOG(P2)-LOG(P)))
        IF (J.LE.1) THEN
          J=2
        ELSE
          TT(1)=TT(2)
          FT(1)=FT(2)
        END IF
        TT(2)=TT(3)
      ELSE
C   FOR THIRD AND SUBSEQUENT ITERATIONS, USE SECANT/REGULI-FALSI
        TT(3)=TT(2)-FT(2)*(TT(2)-TT(1))/(FT(2)-FT(1))
        IF ((TT(3).GT.MAX(TNEG,TPOS) .OR.
     1    TT(3).LT.MIN(TNEG,TPOS)) .AND. LTNEG .AND. LTPOS)
     1    TT(3)=TPOS-FTPOS*(TPOS-TNEG)/(FTPOS-FTNEG)
        TT(1)=TT(2)
        TT(2)=TT(3)
        FT(1)=FT(2)
      END IF
C
  800 CONTINUE
      WRITE (LUP,1040)
  840 T=TT(J)
C
C   ASSIGN RESULTS FOR PHASES 1 AND 2 TO LIQUID AND VAPOR PHASES
C   DEPENDING ON WHETHER THE DEW OR BUBBLE POINT WAS CALCULATED.
C
      IF (LBUB) THEN
        DO 860 I=1,NC
  860   XV(I)=XX2(I)
        VL=V1
        VV=V2
      ELSE
        DO 880 I=1,NC
  880   XL(I)=XX2(I)
        VL=V2
        VV=V1
      END IF
C
C   PRINT WARNING MESSAGES FOR ANY CASES OF NON-CONVERGENCE OCCURING
C   ON FINAL CALL TO EACH ITERATION AND RETURN.
C
      IF (ABS(1.0-VL/VV).LT.TOLR) THEN
        LCRIT=.TRUE.
        WRITE (LUP,1010)
      END IF
      IF (LV1CON) WRITE (LUP,1050)
      IF (LV2CON) WRITE (LUP,1055)
      IF (LXCON) WRITE (LUP,1060)
      RETURN
 1010 FORMAT (1X,'CRITICAL POINT EXCEEDED IN BUBLP')
 1020 FORMAT (1X,'PURE MATERIAL TEMPERATURE ITERATION IN BUBLP',
     1  ' DID NOT CONVERGE')
 1040 FORMAT (1X,'MIXTURE TEMPERATURE ITERATION IN BUBLP DID NOT',
     1  ' CONVERGE')
 1050 FORMAT (1X,'ITERATION IN BUBLP FOR PARENT PHASE VOLUME DID',
     1  ' NOT CONVERGE')
 1055 FORMAT (1X,'ITERATION IN BUBLP FOR INCIPIENT PHASE VOLUME DID',
     1  ' NOT CONVERGE')
 1060 FORMAT (1X,'COMPOSITION ITERATION IN BUBLP DID NOT CONVERGE')
      END
C
C
C
      SUBROUTINE CRITX (X,TTC,PC,VC)
C
C   DEVELOPED BY MARK MCLINDEN AND GRAHAM MORRISON AT THE
C   NATIONAL BUREAU OF STANDARDS UNDER FUNDING FROM THE ELECTRIC
C   POWER RESEARCH INSTITUTE AND NBS.
C
C   THIS ROUTINE FINDS THE CRITICAL POINT PREDICTED BY THE
C   EQUATION OF STATE.  FOR A MIXTURE THE CRITICAL POINT IS
C   THAT OF A PSEUDO-PURE COMPONENT HAVING THE SAME 'A' AND
C   'B' PARAMETERS AS THE MIXTURE; IN GENERAL, SUCH A PSEUDO-
C   PURE CRITICAL POINT WILL BE BELOW THE ACTUAL MIXTURE
C   CRITICAL POINT.
C
C   INPUTS:
C      X - MIXTURE COMPOSITION (MOL FRAC)
C      TTC - INITIAL GUESS FOR THE CRITICAL TEMPERATURE (K)
C
C   OUTPUTS:
C      TTC - CRITICAL TEMPERATURE (K)
C      PC - CRITICAL PRESSURE (KPA)
C      VC - CRITICAL VOLUME (M**3/KMOL)
C
C   OTHER SUBROUTINE REFERENCED:
C      ESPAR - CALCULATION OF EQUATION OF STATE PARAMETERS
C
      COMMON /RDATA4/ R
      DIMENSION TC(3),FTC(2),X(5)
      IF (TTC.LE.0.0) TTC=300.
      TC(1)=TTC
      J=1
      DO 200 IT=1,20
      CALL ESPAR (0,TC(J),X,AC,BC)
      IF (BC.LE.0.0) THEN
        TC(J)=0.5*TC(J)
        GOTO 200
      END IF
      TCC=0.2273291*AC/(R*BC)
      FTC(J)=TCC-TC(J)
      IF (ABS(FTC(J)).LT.0.01) GOTO 240
      IF (J.LE.1) THEN
        J=2
        TC(2)=MIN(TCC,1.5*TC(1))
      ELSE
        TC(3)=TC(2)-FTC(2)*(TC(2)-TC(1))/(FTC(2)-FTC(1))
        TC(1)=TC(2)
        TC(2)=TC(3)
        FTC(1)=FTC(2)
      END IF
  200 CONTINUE
      WRITE (6,1000)
  240 TTC=TC(J)
      PC=0.02386944*AC/BC**2
      VC=3.006818*BC
      RETURN
 1000 FORMAT (1X,'*** CRITX DID NOT CONVERGE')
      END
C
C
C
      SUBROUTINE HCVCPS (IQ,T,V,X,H,CV,CP,VS)
C
C   GIVEN TEMPERATURE, SPECIFIC VOLUME AND COMPOSITION COMPUTE ENTHALPY
C   AND/OR HEAT CAPACITY AT CONSTANT VOLUME AND PRESSURE AS SPECIFIED
C   BY OUTPUT QUALIFIER IQ.  (SINGLE PHASE ONLY)
C
C   INPUTS:
C      IQ - OUTPUT QUALIFIER
C         = 1 COMPUTE ENTHALPY ONLY
C         = 2 ENTHALPY AND CONSTANT VOLUME HEAT CAPACITY
C         = 3 ENTHALPY AND HEAT CAPACITY AT CONSTANT VOLUME AND PRESSURE
C         = 4 COMPUTE HEAT CAPACITY AT CONSTANT VOLUME ONLY
C         = 5 HEAT CAPACITY AT CONSTANT VOLUME AND AT CONSTANT PRESSURE
C      T - TEMPERATURE (K)
C      V - SPECIFIC VOLUME (M**3/KG MOL)
C      X - COMPOSITION (MOLE FRACTION)
C
C   OUTPUTS:
C      H - SPECIFIC ENTHALPY (KJ/KG MOL)
C      CV - HEAT CAPACITY AT CONSTANT VOLUME (KJ/(KG MOL K))
C      CP - HEAT CAPACITY AT CONSTANT PRESSURE (KJ/(KG MOL K))
C
C   OTHER SUBROUTINES REFERENCED BY HCVCP:
C      ESPAR - COMPUTATION OF EQUATION OF STATE PARAMETERS
C
C
      IMPLICIT REAL (A-H,O-Z)
      COMMON /NCOMP/ NC
      COMMON /ESPAR1/ AP(5),BP(5),F(5,5),C1,D1,C2,D2
      COMMON /HSPURE/ HP(5),SP(5),CPP(5)
      COMMON /REF/ TREF(5),HR(5),SR(5),VR(5)
      COMMON /RDATA2/ WM(5),TC(5)
      COMMON /RDATA4/ R
      DIMENSION X(5)
      CALL ESPAR (IQ,T,X,A,B)
      B4=0.25*B
      VB=V+B
      VBL=LOG(V/VB)
      VB4=V-B4
      VB43=VB4**3
      RT=R*T
      IF (IQ.LE.3) THEN
C   COMPUTE ENTHALPY AS A FUNCTION OF T, V, X
        H=((A+(A*D1/B-C1)*T)*VBL+A*(D1*T-B)/VB)/B
     1    +2.0*RT*V*(2.0*V-B4)*(B4-0.25*D1*T)/VB43
        DO 120 I=1,NC
  120   H=H+X(I)*(HP(I)-HR(I))
      END IF
      IF (IQ.GE.2) THEN
C   COMPUTE CONSTANT VOLUME HEAT CAPACITY
        D12=D1*D1
        CV=(R*V*((0.375*D12*T/VB4+0.5*D2*T+D1)*(B4-2.0*V)
     1    +0.125*D12*T)/VB43
     1    +((1.0/VB+VBL/B)*(A*D2*B+2.0*(C1*D1*B-A*D12))/B
     1    -C2*VBL-A*D12/VB**2)/B)*T-R
        DO 160 I=1,NC
  160   CV=CV+X(I)*CPP(I)
        IF (IQ.EQ.3 .OR. IQ.EQ.5) THEN
C   COMPUTE SPECIFIC HEAT AT CONSTANT PRESSURE USING CV
          Y=B4/V
          DPDT=2.0*R/VB4*(-1.0+(-0.25*T*D1+(V*V*(1.0+0.75*T*D1/VB4))
     1      /VB4)/VB4)+(R+(-C1+A*D1/VB)/VB)/V
          DPDV=(-RT*(1.0+(4.0+(4.0+(-4.0+Y)*Y)*Y)*Y)/(1.0-Y)**4
     1      +A*(2.0*V+B)/VB**2)/V**2
          CP=CV-DPDT*DPDT*T/DPDV
C   COMPUTE VELOCITY OF SOUND USING C'S AND VOLUME DERIVATIVE OF P
          WMOL=0.0
          DO 180 I=1,NC
  180     WMOL=WMOL+X(I)*WM(I)
          VS=V*SQRT(-1000.0*CP*DPDV/(WMOL*CV))
        END IF
      END IF
      RETURN
      END
C
C
      SUBROUTINE HPIN (H,P,X,T,XQ,XL,XV,VL,VV,HL,HV)
C
C   DEVELOPED BY MARK MCLINDEN AND GRAHAM MORRISON AT THE
C   NATIONAL BUREAU OF STANDARDS WITH FUNDING FROM THE ELECTRIC
C   POWER RESEARCH INSTITUTE AND NBS.
C
C   THIS ROUTINE CALCULATES THE TEMPERATURE AND QUALITY OF A SINGLE
C   OR TWO-PHASE MIXTURE GIVEN THE PRESSURE AND THE OVERALL (BULK)
C   ENTHALPY AND COMPOSITION
C
C   INPUTS:
C      H - ENTHALPY (KJ/KMOL) OF BULK MIXTURE
C      P - PRESSURE (KPA)
C      X - BULK COMPOSITION (MOLE FRACTION)
C
C   OUTPUTS:
C      T - EQUILIBRIUM TEMPERATURE OF SYSTEM (K)
C      XQ - EQUILIBRIUM QUALITY (MOLAR BASIS), NEGATIVE VALUES INDICATE
C        SUBCOOLED LIQUID.  QUALITIES > 1 INDICATE SUPERHEATED VAPOR.
C        NOTE:  THE QUALITIES COMPUTED FOR SINGLE PHASE CONDITIONS IN
C        THE ROUTINES HPIN, HTIN, SPIN, AND VTIN WILL NOT BE THE SAME.
C      XL - COMPOSITION OF LIQUID PHASE (MOLE FRACTION)
C      XV - COMPOSITION OF VAPOR PHASE (MOLE FRACTION)
C      VL - MOLAR VOLUME OF LIQUID PHASE (M**3/KMOL)
C      VV - MOLAR VOLUME OF VAPOR PHASE (M**3/KMOL)
C      HL - MOLAR ENTHALPY OF LIQUID PHASE (KJ/KMOL)
C      HV - MOLAR ENTHALPY OF VAPOR PHASE (KJ/KMOL)
C      NOTE:  IF ONLY SUBCOOLED LIQUID IS PRESENT, VV AND HV ARE
C        COMPUTED AT THE BUBBLE POINT TEMPERATURE AND VAPOR COMPOSITION
C        IN EQUILIBRIUM WITH SATURATED LIQUID AT THE GIVEN P, XL.
C        IF ONLY SUPERHEATED VAPOR IS PRESENT, VL AND HL ARE
C        COMPUTED AT THE DEWPOINT TEMPERATURE AND LIQUID
C        COMPOSITION IN EQUILIBRIUM WITH SATURATED VAPOR AT THE
C        GIVEN P, XV.
C
      IMPLICIT REAL (A-H,O-Z)
      LOGICAL LCRIT,LCONV
      DIMENSION X(5),XL(5),XV(5),XLB(5),XVB(5),XLD(5),XVD(5)
      COMMON /NCOMP/ NC
      COMMON /TOL/ TOLR,ITMAX,LUP
      COMMON /TOLSH/ TOLH,TOLS
C
C   COMPUTE BUBBLE AND DEW POINTS AT GIVEN CONDITIONS OF P AND X
C
      CALL BUBLP (P,X,XV,TBUB,VL,VVBUB,.TRUE.,LCRIT)
      CALL BUBLP (P,XL,X,TDEW,VLDEW,VV,.FALSE.,LCRIT)
      CALL HCVCPS (1,TBUB,VL,X,HL,CV,CP,VSND)
      CALL HCVCPS (1,TDEW,VV,X,HV,CV,CP,VSND)
C       WRITE (*,*) 'TBUB,TDEW,HLBUB,HVDEW   ',TBUB,TDEW,HL,HV
      IF (H.LE.HL) THEN
C   SINGLE PHASE LIQUID
        DO 120 I=1,NC
  120   XL(I)=X(I)
        VV=VVBUB
        VLBUB=VL
        CALL HPXSP (H,P,X,TBUB,HL,VLBUB,T,VL,.TRUE.)
      ELSE IF (H.GE.HV) THEN
C   SINGLE PHASE VAPOR
        DO 140 I=1,NC
  140   XV(I)=X(I)
        VL=VLDEW
        VVDEW=VV
        CALL HPXSP (H,P,X,TDEW,HV,VVDEW,T,VV,.FALSE.)
      ELSE
C   TWO PHASE
        NCC=NC
        DO 210 I=1,NC
        IF (X(I).LT.TOLR) NCC=NCC-1
        XLB(I)=X(I)
        XVB(I)=XV(I)
        XLD(I)=XL(I)
        XVD(I)=X(I)
  210   CONTINUE
        HLB=HL
        HVD=HV
        CALL HCVCPS (1,TBUB,VVBUB,XVB,HVB,CV,CP,VSND)
        CALL HCVCPS (1,TDEW,VLDEW,XLD,HLD,CV,CP,VSND)
        DO 260 IT=1,ITMAX/2
C       WRITE (*,1200) IT,(XLB(I),I=1,NC),(XLD(I),I=1,NC),
C    1    (XVB(I),I=1,NC),(XVD(I),I=1,NC),HLB,HVB
C
C   COMPUTE QUALITY BASED ON ENTHALPY; COMPUTED SEPARATELY FOR
C   BUBBLE AD DEW POINT CONDITIONS.
C
        XQHB=(H-HLB)/(HVB-HLB)
        XQHD=(H-HLD)/(HVD-HLD)
C
C   COMPUTE LENGTH OF TIE LINE CONNECTING LIQUID AND VAPOR
C   COMPOSITIONS AND QUALITIES BASED ON COMPOSITION.
C
        IXQCB=0
        IXQCD=0
        XQCB=0.0
        XQCD=0.0
        TLINEB=0.0
        TLINED=0.0
        DO 214 I=1,NC
        IF (XLB(I).NE.XVB(I)) THEN
          IXQCB=IXQCB+1
          XQCB=XQCB+(X(I)-XLB(I))/(XVB(I)-XLB(I))
        END IF
        TLINEB=TLINEB+(XVB(I)-XLB(I))**2
        IF (XLD(I).NE.XVD(I)) THEN
          IXQCD=IXQCD+1
          XQCD=XQCD+(X(I)-XLD(I))/(XVD(I)-XLD(I))
        END IF
        TLINED=TLINED+(XVD(I)-XLD(I))**2
  214   CONTINUE
        IF (IXQCB.GT.0) THEN
          XQCB=XQCB/REAL(IXQCB)
        ELSE
          XQCB=XQHB
        END IF
        IF (IXQCD.GT.0) THEN
          XQCD=XQCD/REAL(IXQCD)
        ELSE
          XQCD=XQHD
        END IF
        TLINEB=SQRT(TLINEB)
        TLINED=SQRT(TLINED)
C
C   CHECK FOR CONVERGENCE
C
        LCONV=.TRUE.
        DO 220 I=1,NC
        IF (ABS(XVB(I)-XVD(I)).GT.0.0001) LCONV=.FALSE.
  220   CONTINUE
        IF (ABS(XQCB-XQHB).GT.0.0001) LCONV=.FALSE.
        IF (ABS(XQCD-XQHD).GT.0.0001) LCONV=.FALSE.
        IF (LCONV) GOTO 280
C
C   ASSIGN WEIGHTS TO BUBBLE AND DEW POINT CALCULATION
C
        IF (IT.LE.1 .OR. NCC.LE.2) THEN
          WTB=1.0+(XQCB-XQHB)/((XQCD-XQHD)-(XQCB-XQHB))
          WTD=1.0-(XQCD-XQHD)/((XQCD-XQHD)-(XQCB-XQHB))
        ELSE
          DTSUMB=0.0
          DTSUMD=0.0
          DO 222 J=1,NC-1
          DO 222 K=J+1,NC
          DTSUMB=DTSUMB+((X(J)-XLB(J))*(XVB(K)-XLB(K))-
     1                     (X(K)-XLB(K))*(XVB(J)-XLB(J)))**2
          DTSUMD=DTSUMD+((X(J)-XLD(J))*(XVD(K)-XLD(K))-
     1                     (X(K)-XLD(K))*(XVD(J)-XLD(J)))**2
  222     CONTINUE
          DXBUB=0.0
          DXDEW=0.0
          DO 223 I=1,NC
          DXBUB=DXBUB+(XLB(I)-XVB(I))**2
  223     DXDEW=DXDEW+(XLD(I)-XVD(I))**2
          DXBUB=SQRT(DTSUMB/DXBUB)
          DXDEW=SQRT(DTSUMD/DXDEW)
          WTB=DXDEW/(DXDEW+DXBUB)
          WTD=DXBUB/(DXBUB+DXDEW)
        END IF
        IF (TLINEB/TLINED.GT.2.0 .OR. TLINEB/TLINED.LT.0.5) THEN
          TLAVG=MIN(TLINEB,TLINED)
        ELSE
          TLAVG=(WTB*TLINEB+WTD*TLINED)
        END IF
C       WRITE (*,2000) XQHB,XQHD,XQCB,XQCD,WTB,WTD,
C    1    TLINEB,TLINED,TLAVG
 2000   FORMAT (4X,'XQ,WT,TL',4F8.5,2F8.4,3F10.6)
C
C   COMPUTE NEXT GUESSES FOR COMPOSITION OF LIQUID AND VAPOR
C   AND CARRY OUT CORRESPONDING BUBBLE AND DEW POINT CALCULATIONS.
C
        DO 224 I=1,NC
        XLB2I=X(I)+TLAVG*(WTB*XQHB+WTD*XQHD)
     1    *(WTB*(XLB(I)-XVB(I))/TLINEB+WTD*(XLD(I)-XVD(I))/TLINED)
        XVD2I=X(I)-TLAVG*(WTB*(1.0-XQHB)+WTD*(1.0-XQHD))
     1    *(WTB*(XLB(I)-XVB(I))/TLINEB+WTD*(XLD(I)-XVD(I))/TLINED)
        XLB(I)=XLB2I
        XVD(I)=XVD2I
  224   CONTINUE
        CALL BUBLP (P,XLB,XVB,TBUB,VLBUB,VVBUB,.TRUE.,LCRIT)
        CALL BUBLP (P,XLD,XVD,TDEW,VLDEW,VVDEW,.FALSE.,LCRIT)
        CALL HCVCPS (1,TBUB,VLBUB,XLB,HLB,CV,CP,VSND)
        CALL HCVCPS (1,TBUB,VVBUB,XVB,HVB,CV,CP,VSND)
        CALL HCVCPS (1,TDEW,VLDEW,XLD,HLD,CV,CP,VSND)
        CALL HCVCPS (1,TDEW,VVDEW,XVD,HVD,CV,CP,VSND)
  260   CONTINUE
        WRITE (LUP,1000) H,P,(X(I),I=1,NC)
  280   CONTINUE
C
C   SOLUTION HAS CONVERGED; WRITE OUTPUT VARIABLES.
C
        DO 284 I=1,NC
        XL(I)=XLB(I)
  284   XV(I)=XVB(I)
        VL=VLBUB
        VV=VVBUB
        HL=HLB
        HV=HVB
        T=TBUB
      END IF
      XQ=(H-HL)/(HV-HL)
      RETURN
 1000 FORMAT (1X,'ROUTINE HPIN DID NOT CONVERGE; H,P,X:',2F12.4,5F8.5)
 1200 FORMAT (1X,I2,12F8.4,2F8.1)
      END
 
 
      SUBROUTINE HPXSP (H,P,X,TSAT,HSAT,VSAT,T2,V,LLIQ)
C
C   SUBROUTINE TO ITERATE FOR THE TEMPERATURE OF A SINGLE PHASE
C   BINARY MIXTURE GIVEN ENTHALPY, PRESSURE, AND COMPOSITION.
C   CALLED ONLY BY HPIN.
C
      IMPLICIT REAL (A-H,O-Z)
      DIMENSION X(5)
      LOGICAL LLIQ,LVCON
      COMMON /TOL/ TOLR,ITMAX,LUP
      COMMON /TOLSH/ TOLH,TOLS
      T1=TSAT
      FT1=H-HSAT
      CALL HCVCPS (5,T1,VSAT,X,HSAT,CV,CP,VSND)
      T2=TSAT+FT1/CP
      V=VSAT
      DO 200 IT=1,ITMAX
      CALL ESPAR (2,T2,X,A,B)
      CALL VIT (T2,P,A,B,V,LLIQ,LVCON)
      CALL HCVCPS (1,T2,V,X,HSP,CV,CP,VSND)
      FT2=H-HSP
      IF (ABS(FT2).LT.TOLH .OR. ABS(FT2-FT1).LT.0.02*TOLH) RETURN
      T3=T2-FT2*(T2-T1)/(FT2-FT1)
      T1=T2
      T2=T3
  200 FT1=FT2
      WRITE (LUP,1000)
      RETURN
 1000 FORMAT (1X,'SINGLE PHASE ITERATION IN HPIN DID NOT CONVERGE')
      END
C
C
C
      FUNCTION ENTROP(T,V,X)
C
C   COMPUTE SPECIFIC ENTROPY OF A SINGLE PHASE TWO-COMPONENT MIXTURE
C   AS A FUNCTION OF TEMPERATURE, SPECIFIC VOLUME, AND COMPOSITION
C
C   INPUTS:
C      T - TEMPERATURE (K)
C      V - SPECIFIC VOLUME (M**3/KG MOL)
C      X - COMPOSITION (MOLE FRACTION)
C
C   OUTPUT:
C      S - SPECIFIC ENTROPY (KJ/(KG MOL K))
C
C   OTHER SUBROUTINES REFERENCED BY ENTROP:
C      ESPAR - COMPUTATION OF EQUATION OF STATE PARAMETERS
C
C
      IMPLICIT REAL (A-H,O-Z)
      DIMENSION X(5)
      COMMON /NCOMP/ NC
      COMMON /ESPAR1/ AP(5),BP(5),F(5,5),C1,D1,C2,D2
      COMMON /HSPURE/ HP(5),SP(5),CP(5)
      COMMON /REF/ TREF(5),HR(5),SR(5),VR(5)
      COMMON /RDATA4/ R
      CALL ESPAR (1,T,X,A,B)
      B4=0.25*B
      S=(C1*B-A*D1)/B**2*LOG((V+B)/V)+A*D1/B/(V+B)
     1  -R*B4/(V-B4)**2*(4.0*V-3*B4)
     1  -R*T*D1*0.5*V/(V-B4)**3*(2.0*V-B4)
      DO 120 I=1,NC
      S=S+X(I)*(SP(I)-SR(I)+R*LOG(V/VR(I)))
      IF (X(I).GT.0.0 .AND. X(I).LT.1.0) THEN
        S=S-R*X(I)*LOG(X(I))
      END IF
  120 CONTINUE
      ENTROP=S
      RETURN
      END
      SUBROUTINE SPIN (S,P,X,T,XQ,XL,XV,VL,VV,SL,SV)
C
C   DEVELOPED BY MARK MCLINDEN AND GRAHAM MORRISON AT THE
C   NATIONAL BUREAU OF STANDARDS WITH FUNDING FROM THE ELECTRIC
C   POWER RESEARCH INSTITUTE AND NBS.
C
C   THIS ROUTINE CALCULATES THE TEMPERATURE AND QUALITY OF A SINGLE
C   OR TWO-PHASE MIXTURE GIVEN THE PRESSURE AND THE OVERALL (BULK)
C   ENTROPY AND COMPOSITION
C
C   INPUTS:
C      S - ENTROPY (KJ/KMOL K) OF BULK MIXTURE
C      P - PRESSURE (KPA)
C      X - BULK COMPOSITION (MOLE FRACTION)
C
C   OUTPUTS:
C      T - EQUILIBRIUM TEMPERATURE OF SYSTEM (K)
C      XQ - EQUILIBRIUM QUALITY (MOLAR BASIS), NEGATIVE VALUES INDICATE
C        SUBCOOLED LIQUID.  QUALITIES > 1 INDICATE SUPERHEATED VAPOR.
C        NOTE:  THE QUALITIES COMPUTED FOR SINGLE PHASE CONDITIONS IN
C        THE ROUTINES HPIN, HTIN, SPIN, AND VTIN WILL NOT BE THE SAME.
C      XL - COMPOSITION OF LIQUID PHASE (MOLE FRACTION)
C      XV - COMPOSITION OF VAPOR PHASE (MOLE FRACTION)
C      VL - MOLAR VOLUME OF LIQUID PHASE (M**3/KMOL)
C      VV - MOLAR VOLUME OF VAPOR PHASE (M**3/KMOL)
C      SL - MOLAR ENTHALPY OF LIQUID PHASE (KJ/KMOL K)
C      SV - MOLAR ENTHALPY OF VAPOR PHASE (KJ/KMOL K)
C      NOTE:  IF ONLY SUBCOOLED LIQUID IS PRESENT, VV AND HV ARE
C        COMPUTED AT THE BUBBLE POINT TEMPERATURE AND VAPOR COMPOSITION
C        IN EQUILIBRIUM WITH SATURATED LIQUID AT THE GIVEN P, XL.
C        IF ONLY SUPERHEATED VAPOR IS PRESENT, VL AND HV ARE
C        COMPUTED AT THE DEWPOINT TEMPERATURE AND LIQUID
C        COMPOSITION IN EQUILIBRIUM WITH SATURATED VAPOR AT THE
C        GIVEN P, XV.
C
      IMPLICIT REAL (A-H,O-Z)
      LOGICAL LCRIT,LCONV
      DIMENSION X(5),XL(5),XV(5),XLB(5),XVB(5),XLD(5),XVD(5)
      COMMON /NCOMP/ NC
      COMMON /TOL/ TOLR,ITMAX,LUP
      COMMON /TOLSH/ TOLH,TOLS
C
C   COMPUTE BUBBLE AND DEW POINTS AT GIVEN CONDITIONS OF P AND X
C
      CALL BUBLP (P,X,XV,TBUB,VL,VVBUB,.TRUE.,LCRIT)
      CALL BUBLP (P,XL,X,TDEW,VLDEW,VV,.FALSE.,LCRIT)
      SL=ENTROP(TBUB,VL,X)
      SV=ENTROP(TDEW,VV,X)
C       WRITE (*,*) 'TBUB,TDEW,SLBUB,SVDEW   ',TBUB,TDEW,SL,SV
      IF (S.LE.SL) THEN
C   SINGLE PHASE LIQUID
        DO 120 I=1,NC
  120   XL(I)=X(I)
        VV=VVBUB
        VLBUB=VL
        CALL SPXSP (S,P,X,TBUB,SL,VLBUB,T,VL,.TRUE.)
      ELSE IF (S.GE.SV) THEN
C   SINGLE PHASE VAPOR
        DO 140 I=1,NC
  140   XV(I)=X(I)
        VL=VLDEW
        VVDEW=VV
        CALL SPXSP (S,P,X,TDEW,SV,VVDEW,T,VV,.FALSE.)
      ELSE
C   TWO PHASE
        NCC=NC
        DO 210 I=1,NC
        IF (X(I).LT.TOLR) NCC=NCC-1
        XLB(I)=X(I)
        XVB(I)=XV(I)
        XLD(I)=XL(I)
        XVD(I)=X(I)
  210   CONTINUE
        SLB=SL
        SVD=SV
        SVB=ENTROP(TBUB,VVBUB,XVB)
        SLD=ENTROP(TDEW,VLDEW,XLD)
        DO 260 IT=1,ITMAX/2
C       WRITE (*,1200) IT,(XLB(I),I=1,NC),(XLD(I),I=1,NC),
C    1    (XVB(I),I=1,NC),(XVD(I),I=1,NC),SLB,SVB
C
C   COMPUTE QUALITY BASED ON ENTHALPY; COMPUTED SEPARATELY FOR
C   BUBBLE AD DEW POINT CONDITIONS.
C
        XQSB=(S-SLB)/(SVB-SLB)
        XQSD=(S-SLD)/(SVD-SLD)
C
C   COMPUTE LENGTH OF TIE LINE CONNECTING LIQUID AND VAPOR
C   COMPOSITIONS AND QUALITIES BASED ON COMPOSITION.
C
        IXQCB=0
        IXQCD=0
        XQCB=0.0
        XQCD=0.0
        TLINEB=0.0
        TLINED=0.0
        DO 214 I=1,NC
        IF (XLB(I).NE.XVB(I)) THEN
          IXQCB=IXQCB+1
          XQCB=XQCB+(X(I)-XLB(I))/(XVB(I)-XLB(I))
        END IF
        TLINEB=TLINEB+(XVB(I)-XLB(I))**2
        IF (XLD(I).NE.XVD(I)) THEN
          IXQCD=IXQCD+1
          XQCD=XQCD+(X(I)-XLD(I))/(XVD(I)-XLD(I))
        END IF
        TLINED=TLINED+(XVD(I)-XLD(I))**2
  214   CONTINUE
        IF (IXQCB.GT.0) THEN
          XQCB=XQCB/REAL(IXQCB)
        ELSE
          XQCB=XQSB
        END IF
        IF (IXQCD.GT.0) THEN
          XQCD=XQCD/REAL(IXQCD)
        ELSE
          XQCD=XQSD
        END IF
        TLINEB=SQRT(TLINEB)
        TLINED=SQRT(TLINED)
C
C   CHECK FOR CONVERGENCE
C
        LCONV=.TRUE.
        DO 220 I=1,NC
        IF (ABS(XVB(I)-XVD(I)).GT.0.0001) LCONV=.FALSE.
  220   CONTINUE
        IF (ABS(XQCB-XQSB).GT.0.0001) LCONV=.FALSE.
        IF (ABS(XQCD-XQSD).GT.0.0001) LCONV=.FALSE.
        IF (LCONV) GOTO 280
C
C   ASSIGN WEIGHTS TO BUBBLE AND DEW POINT CALCULATION
C
        IF (IT.LE.1 .OR. NCC.LE.2) THEN
          WTB=1.0+(XQCB-XQSB)/((XQCD-XQSD)-(XQCB-XQSB))
          WTD=1.0-(XQCD-XQSD)/((XQCD-XQSD)-(XQCB-XQSB))
        ELSE
          DTSUMB=0.0
          DTSUMD=0.0
          DO 222 J=1,NC-1
          DO 222 K=J+1,NC
          DTSUMB=DTSUMB+((X(J)-XLB(J))*(XVB(K)-XLB(K))-
     1                     (X(K)-XLB(K))*(XVB(J)-XLB(J)))**2
          DTSUMD=DTSUMD+((X(J)-XLD(J))*(XVD(K)-XLD(K))-
     1                     (X(K)-XLD(K))*(XVD(J)-XLD(J)))**2
  222     CONTINUE
          DXBUB=0.0
          DXDEW=0.0
          DO 223 I=1,NC
          DXBUB=DXBUB+(XLB(I)-XVB(I))**2
  223     DXDEW=DXDEW+(XLD(I)-XVD(I))**2
          DXBUB=SQRT(DTSUMB/DXBUB)
          DXDEW=SQRT(DTSUMD/DXDEW)
          WTB=DXDEW/(DXDEW+DXBUB)
          WTD=DXBUB/(DXBUB+DXDEW)
        END IF
        IF (TLINEB/TLINED.GT.2.0 .OR. TLINEB/TLINED.LT.0.5) THEN
          TLAVG=MIN(TLINEB,TLINED)
        ELSE
          TLAVG=(WTB*TLINEB+WTD*TLINED)
        END IF
C       WRITE (*,2000) XQSB,XQSD,XQCB,XQCD,WTB,WTD,
C    1    TLINEB,TLINED,TLAVG
 2000   FORMAT (4X,'XQ,WT,TL',4F8.5,2F8.4,3F10.6)
C
C   COMPUTE NEXT GUESSES FOR COMPOSITION OF LIQUID AND VAPOR
C   AND CARRY OUT CORRESPONDING BUBBLE AND DEW POINT CALCULATIONS.
C
        DO 224 I=1,NC
        XLB2I=X(I)+TLAVG*(WTB*XQSB+WTD*XQSD)
     1    *(WTB*(XLB(I)-XVB(I))/TLINEB+WTD*(XLD(I)-XVD(I))/TLINED)
        XVD2I=X(I)-TLAVG*(WTB*(1.0-XQSB)+WTD*(1.0-XQSD))
     1    *(WTB*(XLB(I)-XVB(I))/TLINEB+WTD*(XLD(I)-XVD(I))/TLINED)
        XLB(I)=XLB2I
        XVD(I)=XVD2I
  224   CONTINUE
        CALL BUBLP (P,XLB,XVB,TBUB,VLBUB,VVBUB,.TRUE.,LCRIT)
        CALL BUBLP (P,XLD,XVD,TDEW,VLDEW,VVDEW,.FALSE.,LCRIT)
      SLB=ENTROP(TBUB,VLBUB,XLB)
      SVB=ENTROP(TBUB,VVBUB,XVB)
      SLD=ENTROP(TDEW,VLDEW,XLD)
      SVD=ENTROP(TDEW,VVDEW,XVD)
  260   CONTINUE
        WRITE (LUP,1000) S,P,(X(I),I=1,NC)
  280   CONTINUE
C
C   SOLUTION HAS CONVERGED; WRITE OUTPUT VARIABLES.
C
        DO 284 I=1,NC
        XL(I)=XLB(I)
  284   XV(I)=XVB(I)
        VL=VLBUB
        VV=VVBUB
        SL=SLB
        SV=SVB
        T=TBUB
      END IF
      XQ=(S-SL)/(SV-SL)
      RETURN
 1000 FORMAT (1X,'ROUTINE SPIN DID NOT CONVERGE; S,P,X:',2F12.4,5F8.5)
 1200 FORMAT (1X,I2,12F8.4,2F8.1)
      END
 
 
      SUBROUTINE SPXSP (S,P,X,TSAT,SSAT,VSAT,T2,V,LLIQ)
C
C   SUBROUTINE TO ITERATE FOR THE TEMPERATURE OF A SINGLE PHASE
C   BINARY MIXTURE GIVEN ENTHALPY, PRESSURE, AND COMPOSITION.
C   CALLED ONLY BY SPIN.
C
      IMPLICIT REAL (A-H,O-Z)
      DIMENSION X(5)
      LOGICAL LLIQ,LVCON
      COMMON /TOL/ TOLR,ITMAX,LUP
      COMMON /TOLSH/ TOLH,TOLS
      T1=TSAT
      FT1=S-SSAT
      CALL HCVCPS (4,T1,VSAT,X,HSAT,CV,CP,VSND)
      SSAT=ENTROP(T1,VSAT,X)
      T2=TSAT+FT1/CV
      V=VSAT
      DO 200 IT=1,ITMAX
      CALL ESPAR (2,T2,X,A,B)
      CALL VIT (T2,P,A,B,V,LLIQ,LVCON)
      SSP=ENTROP(T2,V,X)
      FT2=S-SSP
      IF (ABS(FT2).LT.TOLS .OR. ABS(FT2-FT1).LT.0.02*TOLS) RETURN
      T3=T2-FT2*(T2-T1)/(FT2-FT1)
      T1=T2
      T2=T3
  200 FT1=FT2
      WRITE (LUP,1000)
      RETURN
 1000 FORMAT (1X,'SINGLE PHASE ITERATION IN SPIN DID NOT CONVERGE')
      END
      SUBROUTINE VIT (T,P,A,B,VS,LLIQI,LVCON)
C
C   DEVELOPED BY MARK MCLINDEN AND GRAHAM MORRISON AT THE
C   NATIONAL BUREAU OF STANDARDS UNDER FUNDING FROM THE ELECTRIC
C   POWER RESEARCH INSTITUTE AND NBS.
C
C   GIVEN TEMPERATURE, PRESSURE, AND EQUATION OF STATE
C   PARAMETERS, THIS ROUTINE CALCULATES THE LIQUID OR VAPOR
C   MOLAR VOLUME THAT SATISFIES THE EQUATION OF STATE.
C
C   INPUTS:
C      T - TEMPERATURE (K)
C      P - PRESSURE (KPA)
C      A,B - EQUATION OF STATE PARAMETERS AT TEMPERATURE T
C      VS - INITIAL GUESS FOR VOLUME.  IN ABSENCE OF BETTER
C         GUESSES SUGGESTED VALUES ARE:
C         LIQUID:  VS=0.8*B
C         VAPOR:   VS=R*T/P
C      LLIQI - LOGICAL VARIABLE
C         IF LLIQI = .TRUE. COMPUTE LIQUID VOLUME
C         IF LLIQI = .FALSE. COMPUTE VAPOR VOLUME
C      NOTE:  IF EITHER THE TEMPERATURE OR THE PRESSURE IS ABOVE
C         THE CRITICAL VALUE, ONLY ONE SOLUTION EXISTS AND THE
C         VALUE OF LLIQI HAS NO EFFECT.
C
C   OUTPUTS:
C      VS - MOLAR VOLUME (M**3/KG MOL)
C      LVCON - ERROR FLAG; IF LVCON = .TRUE. THE ITERATION HAS
C         NOT CONVERGED
C
C   OTHER SUBROUTINES REFERENCED:
C      NONE
C
C   (FOR EXPLANATION OF NOMENCLATURE SEE BUBLT)
C
C   NOTE:  THIS ROUTINE IS WRITTEN IN DOUBLE PRECISION EXCEPT
C      THAT THE ARGUMENTS ARE SINGLE PRECISION
C
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      LOGICAL LLIQ,LVCON,LLIQI
      REAL T,P,A,B,R,VS,TOLR,TC,PC
      COMMON /RDATA4/ R
      COMMON /TOL/ TOLR,ITMAX,LUP
      LVCON=.FALSE.
      LLIQ=LLIQI
      V=VS
      VL=LOG(V)
      PL=LOG(P)
      RT=R*T
      B4=0.25*B
      B4L=LOG(B4)
      IF (VL.LT.B4L) VL=B4L+0.5
      TC=A/(B*4.398909*R)
      PC=0.02386944*A/B**2
      VCL=LOG(12.0272727*B4)
      IF (P.GT.PC) THEN
        LLIQ=.TRUE.
      ELSE IF (T.GT.TC) THEN
        LLIQ=.FALSE.
      END IF
C
C   ENTER NEWTONS METHOD ITERATION FOR VOLUME.  FOR LIQUIDS
C   (OR FLUIDS ABOVE THE CRITICAL PRESSURE) THE ITERATION
C   IS CARRIED OUT IN TRANSFORMED COORDINATES OF LOG (V). FOR
C   VAPOR (OR FLUIDS AT SUPERCRITICAL TEMPERATURES BUT PRESSURES
C   BELOW THE CRITICAL VALUE) THE ITERATION IS IN TERMS OF
C   LOG (V) AND LOG (P).  THE ITERATION HAS CONVERGED WHEN
C   THE PRESSURE CALCULATED FROM THE EQUATION OF STATE AGREES
C   WITH THE INPUT PRESSURE.
C
      DO 100 IT=1,ITMAX
      IF ((VL.GT.VCL .EQV. LLIQ).AND. P.LT.PC) VL=VCL
      VLS=VL
      Y=B4/V
      VB=V+B
C
C   CALCULATE PRESSURE AS A FUNCTION OF VOLUME AND THE
C   DERIVATIVE OF THE PRESSURE W.R.T. LOG (VOLUME).
C
      P2=(RT*(1.0+(1.0+(1.0-Y)*Y)*Y)/(1.0-Y)**3-A/VB)/V
      DPDLV=RT/V*(-1.0+(-4.0+(-4.0+(4.0-Y)*Y)*Y)*Y)/(1.0-Y)**4
     1  +A*(2.0*V+B)/(V*VB*VB)
      IF (LLIQ) THEN
        IF (DPDLV.GE.0.0) THEN
          VL=0.5*(B4L+VLS)
        ELSE
          FVDP=(P2-P)/DPDLV
          IF (ABS(FVDP/P).LT.0.001*TOLR) THEN
            VS=EXP(VL)
            RETURN
          ELSE
            VL=VL-FVDP
            IF (VL.LE.B4L) VL=0.5*(B4L+VLS)
          END IF
        END IF
      ELSE
        IF (DPDLV.GE.0.0 .OR. P2.LE.0.0) THEN
          VL=VL+0.5
        ELSE
          FVDPL=(LOG(P2)-PL)*P2/DPDLV
          IF (ABS(FVDPL).LT.0.001*TOLR) THEN
            VS=EXP(VL)
            RETURN
          END IF
          VL=VL-FVDPL
          IF (ABS(VL-VLS).GT.1.5) VL=VLS+SIGN(1.0D0,VL-VLS)
          IF (VL.LT.VCL) VL=0.5*(VLS+VCL)
        END IF
      END IF
      V=EXP(VL)
  100 CONTINUE
      LVCON=.TRUE.
      VS=V
      RETURN
      END
